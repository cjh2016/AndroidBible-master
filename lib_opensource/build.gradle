apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion build_versions.target_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //appcompat
    api deps.appcompat.appcompat

    //material design
    api deps.material.material

    //constraint_layout
    api(deps.constraint_layout.constraint_layout) {
        exclude group: "com.android.support"
    }

    //recyclerview
    api deps.recyclerview.recyclerview

    //cardview
    api deps.cardview.cardview

    //kotlin
    api deps.kotlin.stdlib

    //retrofit
    api deps.retrofit.runtime
    api deps.retrofit.gson
    api deps.retrofit.adapter_rxjava2

    //lifecycle
    api deps.lifecycle.extensions
    api deps.lifecycle.java8
    annotationProcessor deps.lifecycle.compiler

    //glide
    api (deps.glide.glide) {
        exclude group: 'com.android.support'
    }
    annotationProcessor deps.glide.compiler
    api 'jp.wasabeef:glide-transformations:4.0.0'
    // If you want to use the GPU Filters
    api 'jp.co.cyberagent.android:gpuimage:2.0.3'

    //arouter
    api deps.arouter.runtime
    kapt deps.arouter.compiler

    //room
    api deps.room.runtime
    api deps.room.rxjava2
    kapt deps.room.compiler

    //test
    testApi deps.junit.junit
    androidTestApi deps.runner.runner
    androidTestApi deps.espresso.core

    //aspectj
    api deps.aspectj.aspectjrt

    //eventbus
    api deps.eventbus.eventbus

    // RxJava2 RxAndroid2
    api deps.rxjava2.rxkotlin2
    api deps.rxjava2.rx_android

    //AVLoadingIndicatorView
    api deps.avi.avi

    //leakcanary
    debugApi deps.leakcanary.debug
    releaseApi deps.leakcanary.release
    testApi deps.leakcanary.test

    //spiderman
    debugApi(deps.spiderman.debug) {
        exclude group: "com.android.support"
    }

    releaseApi(deps.spiderman.release) {
        exclude group: "com.android.support"
    }

    //nineoldandroids
    api deps.nineoldandroids.nineoldandroids

    //universalimageloader
    api deps.universalimageloader.universalimageloader

    //pinyin4j
    api deps.pinyin4j.pinyin4j

    //gson
    api deps.gson.gson

    //greendao
    api deps.greendao.greendao


}
